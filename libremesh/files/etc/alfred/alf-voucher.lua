#!/usr/bin/lua

function table.val_to_str ( v )
  if "string" == type( v ) then
    v = string.gsub( v, "\n", "\\n" )
    if string.match( string.gsub(v,"[^'\"]",""), '^"+$' ) then
      return "'" .. v .. "'"
    end
    return '"' .. string.gsub(v,'"', '\\"' ) .. '"'
  else
    return "table" == type( v ) and table.tostring( v ) or
      tostring( v )
  end
end

function table.key_to_str ( k )
  if "string" == type( k ) and string.match( k, "^[_%a][_%a%d]*$" ) then
    return k
  else
    return "[" .. table.val_to_str( k ) .. "]"
  end
end

function table.tostring( tbl )
  local result, done = {}, {}
  for k, v in ipairs( tbl ) do
    table.insert( result, table.val_to_str( v ) )
    done[ k ] = true
  end
  for k, v in pairs( tbl ) do
    if not done[ k ] then
      table.insert( result,
        table.key_to_str( k ) .. "=" .. table.val_to_str( v ) )
    end
  end
  return "{" .. table.concat( result, "," ) .. "}"
end

local config = require('voucher.config')
local dba = require('voucher.db')
local logic = require('voucher.logic')
local ft = require('voucher.functools')

local type_id = 70 -- voucher

local function get_vouchers()
  local db = dba.load(config.db)
  return db.data
end

local function publish_vouchers()
-- pass a raw chunk of data to alfred
  local fd = io.popen("alfred -s " .. type_id, "w")
  if fd then
    local ret = get_vouchers()
    for key,value in pairs(ret) do
      fd:write(table.tostring(value))
    end
    fd:close()
  end
end

-- local function write_bat_hosts(rows)
--   local content = { "### /tmp/bat-hosts generated by alfred-bat-hosts\n",
--                     "### /!\\ This file is overwritten every 5 minutes /!\\\n",
--                     "### (To keep manual changes, replace /etc/bat-hosts symlink with a static file)\n" }

--   -- merge the chunks from all nodes, de-escaping newlines
--   for _, row in ipairs(rows) do
--     local node, value = unpack(row)
--     table.insert(content, "# Node ".. node .. "\n")
--     table.insert(content, value:gsub("\x0a", "\n") .. "\n")
--   end

--   -- write parsed content down to disk
--   local fd = io.open("/tmp/bat-hosts", "w")
--   if fd then
--     fd:write(table.concat(content))
--     fd:close()
--   end

--   -- try to make a symlink in /etc pointing to /tmp,
--   -- if it exists, ln will do nothing.
--   os.execute("ln -ns /tmp/bat-hosts /etc/bat-hosts 2>/dev/null")
-- end

-- local function receive_bat_hosts()
-- -- read raw chunks from alfred, convert them to a nested table and call write_bat_hosts
--   local fd = io.popen("alfred -r " .. type_id)
--     --[[ this command returns something like
--     { "54:e6:fc:b9:cb:37", "00:11:22:33:44:55 ham_wlan0\x0a00:22:33:22:33:22 ham_eth0\x0a" },
--     { "90:f6:52:bb:ec:57", "00:22:33:22:33:23 spam\x0a" },
--     ]]--

--   if fd then
--     local output = fd:read("*a")
--     if output then
--       assert(loadstring("rows = {" .. output .. "}"))()
--       write_bat_hosts(rows)
--     end
--     fd:close()
--   end
-- end

publish_vouchers()
-- receive_bat_hosts()
